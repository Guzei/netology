//
// –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –∫ –∑–∞–Ω—è—Ç–∏—é 3.1. –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ. –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
//

let line = "\n" + String(repeating: "-" as Character, count: 80) + "\n"
var trackTitle: String

// MARK: - –ó–∞–¥–∞—á–∞ 1
print("\nTask 1\n")
/*
 –°–æ–∑–¥–∞–π—Ç–µ —Å—É–ø–µ—Ä–∫–ª–∞—Å—Å –∞—Ä—Ç–∏—Å—Ç;
 –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –≤ –Ω–µ–º –æ–±—â–∏–µ –¥–ª—è –∞—Ä—Ç–∏—Å—Ç–∞ —Å–≤–æ–π—Å—Ç–≤–∞ (–∏–º—è, —Å—Ç—Ä–∞–Ω–∞, –∂–∞–Ω—Ä);
 –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –æ–±—â–∏–µ –º–µ—Ç–æ–¥—ã (–Ω–∞–ø–∏—Å–∞—Ç—å —Ç—Ä–µ–∫ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç—å —Ç—Ä–µ–∫);
 –í —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –º–µ—Ç–æ–¥–∞ ‚Äú–Ω–∞–ø–∏—Å–∞—Ç—å —Ç—Ä–µ–∫‚Äù –¥–æ–±–∞–≤—å—Ç–µ –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å ‚Äú–Ø (–∏–º—è –∞—Ä—Ç–∏—Å—Ç–∞) –Ω–∞–ø–∏—Å–∞–ª —Ç—Ä–µ–∫ (–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞)‚Äù;
 –í —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –º–µ—Ç–æ–¥–∞ ‚Äú–∏—Å–ø–æ–ª–Ω–∏—Ç—å —Ç—Ä–µ–∫‚Äù –¥–æ–±–∞–≤—å—Ç–µ –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å ‚Äú–Ø (–∏–º—è –∞—Ä—Ç–∏—Å—Ç–∞) –∏—Å–ø–æ–ª–Ω–∏–ª —Ç—Ä–µ–∫ (–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞)‚Äù;
 –°–æ–∑–¥–∞–π—Ç–µ 3 —Å–∞–±–∫–ª–∞—Å—Å–∞ –ª—é–±—ã—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤ –∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –≤ –Ω–∏—Ö –ú–ï–¢–û–î–´ —Å—É–ø–µ—Ä–∫–ª–∞—Å—Å–∞ –∫–ª–∞—Å—Å–∞.
*/

// –ß—Ç–æ –∂, –µ—Å–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º, —Ç–æ –Ω–∞–¥–æ —á—Ç–æ-—Ç–æ –≤–∑—è—Ç—å –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ. –ù–∞–ø—Ä–∏–º–µ—Ä —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω:
enum Countries: String {
    case ru = "–†–æ—Å—Å–∏–π—Å–∫–∞—è –§–µ–¥–µ—Ä–∞—Ü–∏—è"
    case ri = "–†–æ—Å—Å–∏–π—Å–∫–∞—è –ò–º–ø–µ—Ä–∏—è"
    case us = "USA"
    case fr = "R√©publique fran√ßaise"
}


class Artist {

    var name: String
    var country: Countries
    var genre: String

    init(name: String, country: Countries, genre: String) {
        self.name = name
        self.country = country
        self.genre = genre
    }

    func writeTrack(_ title: String) {
        print("–Ø, \(name), –Ω–∞–ø–∏—Å–∞–ª(–∞) —Ç—Ä–µ–∫ \"\(title)\".")
    }

    func playTrack(_ title: String) {
        print("–Ø, \(name), –∏—Å–ø–æ–ª–Ω–∏–ª(–∞) —Ç—Ä–µ–∫ \"\(title)\".")
    }
}

class PopArtist: Artist {

    override func writeTrack(_ title: String) {
        super.writeTrack(title)
        print("–£—Ç–æ—á–Ω—è—é: –ø–æ–ø—Å–∞.")
    }

    override func playTrack(_ title: String) {
        super.playTrack(title)
        print("—Ñ–∞–Ω–µ—Ä–∞?")
    }
}

class RapArtist: Artist {

    override func writeTrack(_ title: String) {
        super.writeTrack(title)
        print("–í —Å—Ç–∏–ª–µ —Ä—ç–ø. –î–ª—è —Ç–µ—Ö, –∫—Ç–æ –≤ —Ç–∞–Ω–∫–µ.")
    }

    override func playTrack(_ title: String) {
        super.playTrack(title)
        print("–ö–∞—á–∞–µ–º –∑–∞–ª!")
    }
}

class ClassicArtist: Artist {

    override func writeTrack(_ title: String) {
        super.writeTrack(title)
        print("–ò –∑–∞–≤—Ç—Ä–∞ –µ—â—ë –Ω–∞–ø–∏—à—É.")
    }

    override func playTrack(_ title: String) {
        super.playTrack(title)
        print("–î–ª—è –ª—é–±–∏–º–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏")
    }
}

var klavaCoca = PopArtist(name: "–ö–ª–∞–≤–∞ –ö–æ–∫–∞", country: .ru, genre: "–ü–æ–ø")
var crash = RapArtist(name: "Crash", country: .us, genre: "–†—ç–ø")
var tchaikovsky = ClassicArtist(name: "–ß–∞–π–∫–æ–≤—Å–∫–∏–π", country: .ri, genre: "–ö–ª–∞—Å—Å–∏–∫–∞")

trackTitle = "–ü–ª–∞—á–µ—à—å"
klavaCoca.writeTrack(trackTitle)
klavaCoca.playTrack(trackTitle)

trackTitle = "Road to me"
crash.writeTrack(trackTitle)
crash.playTrack(trackTitle)

trackTitle = "–í—Ä–µ–º–µ–Ω–∞ –≥–æ–¥–∞"
tchaikovsky.writeTrack(trackTitle)
tchaikovsky.playTrack(trackTitle)


// MARK: - –ó–∞–¥–∞—á–∞ 2 -
print(line, "\nTask 2\n")
/*
 –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∏ –∏–º–µ–ª–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ –Ω–∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã.
 –ó–∞—â–∏—Ç–∏—Ç–µ —ç—Ç–∏—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤ –æ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É–¥—É—â–µ–º.
*/

final class PopArtistPlus: PopArtist {

    var nickName: String
    private var isMicrophoneSwitchOn = false

    func microfonSwitching(_ switchOnOff: Bool) {
        isMicrophoneSwitchOn = !isMicrophoneSwitchOn
    }

    override func playTrack(_ title: String) {
        guard isMicrophoneSwitchOn else {
            print("–ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –º–∏–∫—Ä–æ—Ñ–æ–Ω üòÄ")
            return
        }
        print("–Ø, \(name) aka \(nickName), –∏–∑ \(country.rawValue) –∏—Å–ø–æ–ª–Ω–∏–ª(–∞) —Ç—Ä–µ–∫ \"\(title)\"")  // –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω—è–µ–º –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ –Ω–∞—Ä—É—à–∞—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞.
        microfonSwitching(false)
    }

    // –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ
    init(name: String, country: Countries, genre: String, nickName: String) {
        self.nickName = nickName
        super.init(name: name, country: country, genre: genre)
    }

}

final class RapArtistPlus: RapArtist {

    var numberOfTattoos = 0

    func isInsider() -> Bool {
        return numberOfTattoos > 10
    }
    // –≤ —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é
}

final class ClassicArtistPlus: ClassicArtist {

    var countTchaikovskyCompetition: UInt8 { // ü´¢
        didSet {
            print("–¢–µ–ø–µ—Ä—å –∫–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∏–π –≤ –∫–æ–Ω–∫—É—Ä—Å–µ –∏–º.–ü.–ò.–ß–∞–π–∫–æ–≤—Å–∫–æ–≥–æ: ", countTchaikovskyCompetition)
        }
    }

    func plusOneToCompetition() {
        self.countTchaikovskyCompetition += 1
    }

    init(name: String, country: Countries, genre: String, countTchaikovskyCompetition: UInt8) {
        self.countTchaikovskyCompetition = countTchaikovskyCompetition
        super.init(name: name, country: country, genre: genre)
    }
    convenience init(_ name: String, _ country: Countries, _ genre: String, _ countTchaikovskyCompetition: UInt8) {
        self.init(name: name, country: country, genre: genre, countTchaikovskyCompetition: countTchaikovskyCompetition)
    }

    override func playTrack(_ title: String) {
        super.playTrack(title)
        print("–î–∞, –∫—Å—Ç–∞—Ç–∏, —è –∏–∑ —Å—Ç—Ä–∞–Ω—ã: \"\(country.rawValue)\"")
    }
}

// class PopArtictPlusSub: PopArtistPlus {} // Error: Inheritance from a final class 'PopArtistPlus'

var klavaCocaPlus = PopArtistPlus(name: "–ö–ª–∞–≤–¥–∏—è –í–∞–¥–∏–º–æ–≤–Ω–∞ –í—ã—Å–æ–∫–æ–≤–∞", country: .ru, genre: "–ü–æ–ø", nickName: "–ö–ª–∞–≤–∞ –ö–æ–∫–∞")
klavaCocaPlus.playTrack("–ü–ª–∞—á–µ—à—å")
klavaCocaPlus.microfonSwitching(true)
klavaCocaPlus.playTrack("–ü–ª–∞—á–µ—à—å")

var crashPlus = RapArtistPlus(name: "Crash", country: .us, genre: "–†—ç–ø")
crashPlus.isInsider()
crashPlus.numberOfTattoos = 11
crashPlus.isInsider()


var martinovPlus = ClassicArtistPlus(name: "–ú–∞—Ä—Ç—ã–Ω–æ–≤", country: .ru, genre: "–ö–ª–∞—Å—Å–∏–∫–∞", countTchaikovskyCompetition: 5)
var tchaikovskyPlus = ClassicArtistPlus("–ß–∞–π–∫–æ–≤—Å–∫–∏–π", .ri, "–ö–ª–∞—Å—Å–∏–∫–∞", 0)
tchaikovskyPlus.countTchaikovskyCompetition // 0
tchaikovskyPlus.plusOneToCompetition()
tchaikovskyPlus.plusOneToCompetition()
tchaikovskyPlus.playTrack("–í—Ä–µ–º–µ–Ω–∞ –≥–æ–¥–∞")


// MARK: - –ó–∞–¥–∞—á–∞ 3 * (–∑–∞–¥–∞—á–∞ —Å–æ –∑–≤–µ–∑–¥–æ—á–∫–æ–π) -
print(line, "\nTask 3\n")
/*
 –°–æ–∑–¥–∞–π—Ç–µ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –¥–æ–±–∞–≤–∏—Ç—å –≤ –Ω–µ–≥–æ –≤–∞—à–∏—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤;
 –î–æ–±–∞–≤—å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ä–∞–Ω–µ–µ –∞—Ä—Ç–∏—Å—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤;
*/


var artists = [Artist]()

// –î–∞–π—Ç–µ –≤—Å–µ—Ö! –ø–æ –¥–≤–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞. –ó–∞–ø–∞—Ö–ª–æ –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º–æ–º.
artists += [klavaCoca, klavaCocaPlus, crash, crashPlus, tchaikovsky, tchaikovskyPlus]

// –∏ –≤—Å—ë –∂–µ –∫–∞–∫ –ª—É—á—à–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º? –ò–ª–∏ –æ–±—â–µ–≥–æ –ø—Ä–∞–≤–∏–ª–∞ –Ω–µ—Ç –∏ —ç—Ç–æ –ª–∏—á–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è? –ò–ª–∏ –æ—Ç –∫–æ–º–∞–Ω–¥—ã –∑–∞–≤–∏—Å–∏—Ç?
for artist in artists {
    print(artist.name)
}
print("\n")
artists.forEach {
    print($0.playTrack("BB")) // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º–∞, —Ç.–∫. —ç—Ç–æ –º–µ—Ç–æ–¥ —Ä–∞–∑–Ω—ã–π. –í–æ—Ç —Ç–æ–ª—å–∫–æ –Ω–µ –ø–æ–Ω—è–ª –æ—Ç–∫—É–¥–∞ –≤–∑—è–ª–∏—Å—å –ø—É—Å—Ç—ã–µ —Å–∫–æ–±–∫–∏ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –≤ –∫–æ–Ω—Å–æ–ª—å?
}

artists[4].playTrack("CC") // –ï—Å–ª–∏ –ø–µ—á–∞—Ç—å –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏ —Ç–æ —Å–∫–æ–±–æ–∫ () –Ω–µ—Ç. –ó–∞–≥–∞–¥–∫–∞.

//artists[1].nickName // –û–ø—Å...
// —Å–º–æ—Ç—Ä–∏–º –≤–∏–¥–µ–æ https://youtu.be/1D-DFsNS1tY?t=1183 –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–ª—è –∫–æ–Ω—Å–ø–µ–∫—Ç–∞ :)
if artists[1] is PopArtistPlus {
    print(line, (artists[1] as! PopArtistPlus).nickName)
}

/*
 –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç—á–µ—Ç –æ —Ç–æ–º, —á—Ç–æ –≤—ã –ø–æ–Ω—è–ª–∏/–≤ —á–µ–º —Ä–∞–∑–æ–±—Ä–∞–ª–∏—Å—å, –≤—ã–ø–æ–ª–Ω—è—è —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ;
 –î–∞–π—Ç–µ –æ—Ü–µ–Ω–∫—É —Å–≤–æ–µ–º—É –ø–æ–Ω–∏–º–∞–Ω–∏—é –¥–∞–Ω–Ω–æ–π —Ç–µ–º—ã.
 –î–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —ç—Ç—É —Ç–µ–º—É. –í –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –≤—ã –≤—ã—è–≤–∏—Ç–µ —Å–ª–∞–±—ã–µ –∏ —Å–∏–ª—å–Ω—ã–µ –º–µ—Å—Ç–∞ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω–æ–π —Ç–µ–º—ã, –∑–∞–∫—Ä–æ–µ—Ç–µ –ø—Ä–æ–±–µ–ª—ã –∏–ª–∏ —É –≤–∞—Å –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã.
*/

/*
 override —É–∂–µ –±—ã–ª–æ –∏ —Ä–∞–Ω—å—à–µ –∏ —ç—Ç–æ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π
 convenience - —á—Ç–æ-—Ç–æ –Ω–æ–≤–µ–Ω—å–∫–æ–µ. –ü–æ –ª–µ–∫—Ü–∏–∏ –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ. –ï—â—ë –ª—É—á—à–µ –ø–æ–Ω—è–ª –ø—Ä–æ—á–∏—Ç–∞–≤: https://swiftbook.ru/content/languageguide/initialization/
 final - —Ç–æ–∂–µ –Ω–æ–≤–æ–µ, –Ω–æ –æ—á–µ–≤–∏–¥–Ω–æ–µ
 –î–ª—è –ª—É—á—à–µ–≥–æ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å–¥–µ–ª–∞–ª —à–ø–∞—Ä–≥–∞–ª–∫—É
 https://github.com/Guzei/swift/blob/main/inheritance.playground/Contents.swift

 –¢–µ–º–∞ –û–û–ü (–¥–∞ –∏ –∫–∞–∫ –∏ –¥—Ä—É–≥–∏–µ —Ç–µ–º—ã) –≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º –æ–±—ä—ë–º–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–Ω—è—Ç–Ω–∞ –≤ –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏ —Ç—Ä–µ–±—É–¥–µ—Ç –º–Ω–æ–≥–æ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è.

 –∞ –µ—â—ë –ø–æ–∫–∞–∑–∞–ª–æ—Å—å, —á—Ç–æ –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º –∏ –∑–∞–º—ã–∫–∞–Ω–∏—è –ø–æ—Ö–æ–∂–∏ –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞
*/
